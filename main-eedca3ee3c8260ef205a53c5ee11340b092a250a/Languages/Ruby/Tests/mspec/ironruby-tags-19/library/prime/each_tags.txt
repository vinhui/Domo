fails:Prime.each iterates the given block over all prime numbers
fails:Prime.each infinitely iterates the given block passing a prime
fails:Prime.each passes a prime to the given block ascendently
fails:Prime.each returns the last evaluated value of the given block
fails:Prime.each iterates the given block over all prime numbers which are equal to or less than the first argument
fails:Prime.each returns nil when no prime number is enumerated
fails:Prime.each takes a pseudo-prime generator as the second argument
fails:Prime.each returns an enumerator (or compatible object) if no block given
fails:Prime.each returns an enumerator which remembers the given upper bound
fails:Prime.each returns an enumerator which independently enumerates
fails:Prime.each returns an enumerator which can be rewinded via #rewind
fails:Prime.each starts from 2 regardless of the prior #each
fails:Prime.each starts from 2 regardless of the prior Prime.each.next
fails:Prime#each iterates the given block over all prime numbers
fails:Prime#each infinitely iterates the given block passing a prime
fails:Prime#each passes a prime to the given block ascendently
fails:Prime#each returns the last evaluated value of the given block
fails:Prime#each iterates the given block over all prime numbers which are equal to or less than the first argument
fails:Prime#each returns nil when no prime number is enumerated
fails:Prime#each takes a pseudo-prime generator as the second argument
fails:Prime#each returns an enumerator (or compatible object) if no block given
fails:Prime#each returns an enumerator which remembers the given upper bound
fails:Prime#each returns an enumerator which independently enumerates
fails:Prime#each returns an enumerator which can be rewinded via #rewind
fails:Prime#each starts from 2 regardless of the prior #each
fails:Prime#each starts from 2 regardless of the prior Prime.each.next
fails:Prime#each when an instance created via Prime.new iterates the given block over all prime numbers
fails:Prime#each when an instance created via Prime.new infinitely iterates the given block passing a prime
fails:Prime#each when an instance created via Prime.new raises a ArgumentError when is called with some argumetns
fails:Prime#each when an instance created via Prime.new passes a prime to the given block ascendently
fails:Prime#each when an instance created via Prime.new returns an evaluated value of the given block
fails:Prime#each when an instance created via Prime.new returns an enumerator (or a compatible object) if no block given
fails:Prime#each when an instance created via Prime.new raises an ArgumentError if no block given and is called with some arguments
fails:Prime#each when an instance created via Prime.new does not rewind the generator, each loop start at the current value
fails:"Prime.each iterates the given block over all prime numbers"
fails:"Prime.each infinitely iterates the given block passing a prime"
fails:"Prime.each passes a prime to the given block ascendently"
fails:"Prime.each returns the last evaluated value of the given block"
fails:"Prime.each iterates the given block over all prime numbers which are equal to or less than the first argument"
fails:"Prime.each returns nil when no prime number is enumerated"
fails:"Prime.each takes a pseudo-prime generator as the second argument"
fails:"Prime.each returns an enumerator (or compatible object) if no block given"
fails:"Prime.each returns an enumerator which remembers the given upper bound"
fails:"Prime.each returns an enumerator which independently enumerates"
fails:"Prime.each returns an enumerator which can be rewinded via #rewind"
fails:"Prime.each starts from 2 regardless of the prior #each"
fails:"Prime.each starts from 2 regardless of the prior Prime.each.next"
fails:"Prime#each iterates the given block over all prime numbers"
fails:"Prime#each infinitely iterates the given block passing a prime"
fails:"Prime#each passes a prime to the given block ascendently"
fails:"Prime#each returns the last evaluated value of the given block"
fails:"Prime#each iterates the given block over all prime numbers which are equal to or less than the first argument"
fails:"Prime#each returns nil when no prime number is enumerated"
fails:"Prime#each takes a pseudo-prime generator as the second argument"
fails:"Prime#each returns an enumerator (or compatible object) if no block given"
fails:"Prime#each returns an enumerator which remembers the given upper bound"
fails:"Prime#each returns an enumerator which independently enumerates"
fails:"Prime#each returns an enumerator which can be rewinded via #rewind"
fails:"Prime#each starts from 2 regardless of the prior #each"
fails:"Prime#each starts from 2 regardless of the prior Prime.each.next"
fails:"Prime#each when an instance created via Prime.new iterates the given block over all prime numbers"
fails:"Prime#each when an instance created via Prime.new infinitely iterates the given block passing a prime"
fails:"Prime#each when an instance created via Prime.new raises a ArgumentError when is called with some argumetns"
fails:"Prime#each when an instance created via Prime.new passes a prime to the given block ascendently"
fails:"Prime#each when an instance created via Prime.new returns an evaluated value of the given block"
fails:"Prime#each when an instance created via Prime.new returns an enumerator (or a compatible object) if no block given"
fails:"Prime#each when an instance created via Prime.new raises an ArgumentError if no block given and is called with some arguments"
fails:"Prime#each when an instance created via Prime.new does not rewind the generator, each loop start at the current value"
